name: 🔒 TAURUS AI Security Monitoring

on:
  schedule:
    # Run daily at 09:00 UTC
    - cron: '0 9 * * *'
  workflow_dispatch:  # Allow manual triggering
  push:
    branches: [main]
    paths:
      - '**/package.json'
      - '**/package-lock.json'
      - '**/requirements.txt'
      - '**/Pipfile*'
      - '**/pyproject.toml'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  security-scan:
    name: 🔍 Vulnerability Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      pull-requests: write
      issues: write

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔍 Run npm audit
        id: npm-audit
        continue-on-error: true
        working-directory: ./10-WEB-APP
        run: |
          echo "📦 Scanning Node.js dependencies..."
          npm audit --json > /tmp/npm-audit-report.json || true
          npm audit > /tmp/npm-audit-human.txt || true

          # Extract vulnerability count
          VULN_COUNT=$(jq '.metadata.vulnerabilities | to_entries | map(.value) | add // 0' /tmp/npm-audit-report.json)
          echo "vulnerabilities=$VULN_COUNT" >> $GITHUB_OUTPUT

          # Extract severity breakdown
          CRITICAL=$(jq '.metadata.vulnerabilities.critical // 0' /tmp/npm-audit-report.json)
          HIGH=$(jq '.metadata.vulnerabilities.high // 0' /tmp/npm-audit-report.json)
          MODERATE=$(jq '.metadata.vulnerabilities.moderate // 0' /tmp/npm-audit-report.json)
          LOW=$(jq '.metadata.vulnerabilities.low // 0' /tmp/npm-audit-report.json)

          echo "critical=$CRITICAL" >> $GITHUB_OUTPUT
          echo "high=$HIGH" >> $GITHUB_OUTPUT
          echo "moderate=$MODERATE" >> $GITHUB_OUTPUT
          echo "low=$LOW" >> $GITHUB_OUTPUT

          cat /tmp/npm-audit-human.txt

      - name: 🚨 Create Security Issue for Critical/High Vulnerabilities
        if: steps.npm-audit.outputs.critical > 0 || steps.npm-audit.outputs.high > 0
        uses: actions/github-script@v7
        with:
          script: |
            const critical = parseInt('${{ steps.npm-audit.outputs.critical }}');
            const high = parseInt('${{ steps.npm-audit.outputs.high }}');
            const moderate = parseInt('${{ steps.npm-audit.outputs.moderate }}');
            const low = parseInt('${{ steps.npm-audit.outputs.low }}');

            const title = `🚨 Security Alert: ${critical} Critical, ${high} High Severity Vulnerabilities`;

            const body = `## 🔒 Automated Security Scan Results

**Scan Date:** ${new Date().toISOString()}

### Vulnerability Summary

| Severity | Count |
|----------|-------|
| 🔴 Critical | ${critical} |
| 🟠 High | ${high} |
| 🟡 Moderate | ${moderate} |
| 🟢 Low | ${low} |

### Actions Required

1. Review the detailed audit report in the workflow logs
2. Prioritize patching based on severity
3. Test patches in development environment
4. Deploy to production

### Automated Response

TAURUS AI Security System will attempt to create automated patches for these vulnerabilities.

---

🤖 Generated by TAURUS AI Security Monitoring
Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
`;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'vulnerability', 'automated']
            });

      - name: 📊 Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-report
          path: /tmp/npm-audit-*.json
          retention-days: 90

      - name: 💬 Comment on PR if triggered by PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const vulnCount = parseInt('${{ steps.npm-audit.outputs.vulnerabilities }}');

            if (vulnCount === 0) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: '✅ **Security Scan Passed** - No vulnerabilities detected in dependencies.'
              });
            } else {
              const critical = parseInt('${{ steps.npm-audit.outputs.critical }}');
              const high = parseInt('${{ steps.npm-audit.outputs.high }}');

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `⚠️ **Security Vulnerabilities Detected**

🔴 Critical: ${critical}
🟠 High: ${high}
🟡 Moderate: ${{ steps.npm-audit.outputs.moderate }}
🟢 Low: ${{ steps.npm-audit.outputs.low }}

Please review the security scan results before merging.`
              });
            }

  dependabot-auto-merge:
    name: 🤖 Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: 📥 Fetch Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: ✅ Auto-approve minor and patch updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.update-type == 'version-update:semver-minor'
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚀 Auto-merge low-risk updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security-notify:
    name: 📧 Security Alert Notifications
    runs-on: ubuntu-latest
    needs: security-scan
    if: needs.security-scan.outputs.vulnerabilities > 0

    steps:
      - name: 📧 Send Email Notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: '🚨 Security Alert: Vulnerabilities Detected in ${{ github.repository }}'
          body: |
            Security vulnerabilities have been detected in ${{ github.repository }}.

            Critical: ${{ needs.security-scan.outputs.critical }}
            High: ${{ needs.security-scan.outputs.high }}
            Moderate: ${{ needs.security-scan.outputs.moderate }}
            Low: ${{ needs.security-scan.outputs.low }}

            Review the security scan at:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            --
            TAURUS AI Security Automation System
          to: ${{ secrets.SECURITY_ALERT_EMAIL }}
          from: TAURUS AI Security <security@taurusai.com>
          priority: high
